{
  "name": "nclex-preparation-portal",
  "version": "2.0.0",
  "description": "NCLEX Preparation Portal - Full-stack educational application with 50 NCLEX questions",
  "type": "module",
  "scripts": {
    "install:all": "cd backend && npm install && cd ../frontend && npm install && cd ../testing && npm install",
    "install:backend": "cd backend && npm install",
    "install:frontend": "cd frontend && npm install",
    "install:testing": "cd testing && npm install",
    "dev:backend": "cd backend && npm run dev",
    "dev:frontend": "cd frontend && npm run dev",
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "start:backend": "cd backend && npm start",
    "start:frontend": "cd frontend && npm run preview",
    "start": "docker-compose up -d && sleep 10 && docker-compose exec backend npm run seed",
    "build:frontend": "cd frontend && npm run build",
    "build": "npm run build:frontend",
    "test:backend": "cd backend && npm test",
    "test:frontend": "cd frontend && npm test",
    "test:e2e": "cd frontend && npm run cypress:run",
    "test:e2e:open": "cd frontend && npm run cypress",
    "test:all": "cd testing && npm run test:all",
    "test": "npm run test:backend && npm run test:e2e",
    "test:docker": "echo '\\n✅ Running backend tests against Docker containers...\\n' && cd testing && npm test",
    "test:docker:all": "echo '\\n✅ Running all tests against Docker containers...\\n' && cd testing && npm test && cd .. && npm run test:e2e",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:stop": "docker-compose stop",
    "docker:restart": "docker-compose restart",
    "docker:build": "docker-compose build",
    "docker:rebuild": "docker-compose down && docker-compose build --no-cache && docker-compose up -d",
    "docker:logs": "docker-compose logs -f",
    "docker:logs:backend": "docker-compose logs -f backend",
    "docker:logs:frontend": "docker-compose logs -f frontend",
    "docker:logs:postgres": "docker-compose logs -f postgres",
    "docker:seed": "docker-compose exec backend npm run seed",
    "docker:seed:postgres": "docker-compose exec backend npm run seed",
    "docker:test": "docker-compose exec backend npm test",
    "docker:shell:backend": "docker-compose exec backend sh",
    "docker:shell:frontend": "docker-compose exec frontend sh",
    "docker:shell:postgres": "docker-compose exec postgres psql -U nclex_user -d nclex_db",
    "docker:ps": "docker-compose ps",
    "db:seed": "cd backend && npm run seed",
    "db:migrate": "cd backend && npx prisma migrate deploy",
    "db:migrate:dev": "cd backend && npx prisma migrate dev",
    "db:reset": "cd backend && npx prisma migrate reset",
    "db:push": "cd backend && npx prisma db push",
    "db:studio": "cd backend && npx prisma studio",
    "db:generate": "cd backend && npx prisma generate",
    "db:switch:sqlite": "cd backend && node scripts/switch-db.js sqlite",
    "db:switch:postgres": "cd backend && node scripts/switch-db.js postgresql",
    "db:init": "cd backend && node scripts/db-migrate.js init",
    "db:deploy": "cd backend && node scripts/db-migrate.js deploy",
    "lint:frontend": "cd frontend && npm run lint",
    "clean": "rm -rf backend/node_modules frontend/node_modules testing/node_modules backend/dist frontend/dist",
    "clean:docker": "docker-compose down -v && docker system prune -f",
    "setup": "npm run install:all && npm run db:migrate && npm run db:seed",
    "setup:docker": "npm run docker:build && npm run docker:up && npm run docker:seed",
    "ci": "npm run install:all && npm run test:backend && npm run docker:up && npm run docker:seed && npm run test:e2e && npm run docker:down",
    "postinstall": "echo '\n✅ Installation complete!\n\nQuick Start:\n  npm start              - Start with Docker (PostgreSQL)\n  npm run dev            - Start local dev servers\n  npm run test:docker:all - Run all tests against Docker\n  npm run docker:logs    - View Docker logs\n\nDocumentation:\n  README.md             - Project overview\n  TESTING.md            - Complete testing guide\n  DOCUMENTATION.md      - Technical documentation\n'"
  },
  "keywords": [
    "nclex",
    "education",
    "nursing",
    "exam-prep",
    "react",
    "nodejs",
    "express",
    "prisma",
    "sqlite",
    "postgresql",
    "docker"
  ],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "concurrently": "^9.1.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": ""
  }
}
